/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wepet.wepet;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * AnimalOrganization generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`animal_organization`")
public class AnimalOrganization implements Serializable {

    private Integer id;
    private int animalId;
    private int organizationId;
    private Date shelterDate;
    private Boolean isAdopted;
    private Animal animal;
    private Organization organization;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`animal_id`", nullable = false, scale = 0, precision = 10)
    public int getAnimalId() {
        return this.animalId;
    }

    public void setAnimalId(int animalId) {
        this.animalId = animalId;
    }

    @Column(name = "`organization_id`", nullable = false, scale = 0, precision = 10)
    public int getOrganizationId() {
        return this.organizationId;
    }

    public void setOrganizationId(int organizationId) {
        this.organizationId = organizationId;
    }

    @Column(name = "`shelter_date`", nullable = false)
    public Date getShelterDate() {
        return this.shelterDate;
    }

    public void setShelterDate(Date shelterDate) {
        this.shelterDate = shelterDate;
    }

    @Column(name = "`is_adopted`", nullable = true)
    public Boolean getIsAdopted() {
        return this.isAdopted;
    }

    public void setIsAdopted(Boolean isAdopted) {
        this.isAdopted = isAdopted;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`animal_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`animal_organization_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public Animal getAnimal() {
        return this.animal;
    }

    public void setAnimal(Animal animal) {
        if(animal != null) {
            this.animalId = animal.getId();
        }

        this.animal = animal;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`organization_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`animal_organization_ibfk_2`"))
    @Fetch(FetchMode.JOIN)
    public Organization getOrganization() {
        return this.organization;
    }

    public void setOrganization(Organization organization) {
        if(organization != null) {
            this.organizationId = organization.getId();
        }

        this.organization = organization;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AnimalOrganization)) return false;
        final AnimalOrganization animalOrganization = (AnimalOrganization) o;
        return Objects.equals(getId(), animalOrganization.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}