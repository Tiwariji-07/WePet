/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wepet.wepet2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Adoption generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`adoption`")
public class Adoption implements Serializable {

    private Integer id;
    private Integer animalOrganizationId;
    private Integer userId;
    private Date adoptionDate;
    private String status;
    private Animal animal;
    private User user;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`animal_organization_id`", nullable = true, scale = 0, precision = 10)
    public Integer getAnimalOrganizationId() {
        return this.animalOrganizationId;
    }

    public void setAnimalOrganizationId(Integer animalOrganizationId) {
        this.animalOrganizationId = animalOrganizationId;
    }

    @Column(name = "`user_id`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "`adoption_date`", nullable = false)
    public Date getAdoptionDate() {
        return this.adoptionDate;
    }

    public void setAdoptionDate(Date adoptionDate) {
        this.adoptionDate = adoptionDate;
    }

    @Column(name = "`status`", nullable = true, length = 255)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`animal_organization_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_adoption_TO_animal_anBe6xM`"))
    @Fetch(FetchMode.JOIN)
    public Animal getAnimal() {
        return this.animal;
    }

    public void setAnimal(Animal animal) {
        if(animal != null) {
            this.animalOrganizationId = animal.getId();
        }

        this.animal = animal;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`user_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`adoption_ibfk_2`"))
    @Fetch(FetchMode.JOIN)
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        if(user != null) {
            this.userId = user.getId();
        }

        this.user = user;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Adoption)) return false;
        final Adoption adoption = (Adoption) o;
        return Objects.equals(getId(), adoption.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}