/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wepet.wepet2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Complain generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`complain`")
public class Complain implements Serializable {

    private Integer id;
    private Integer userId;
    private String picturePath;
    private String description;
    private Integer serviceId;
    private String status;
    private Integer organizationId;
    private String street;
    private String city;
    private String district;
    private String state;
    private String country;
    private Integer pincode;
    private BigDecimal longitude;
    private BigDecimal latitude;
    private User user;
    private Service service;
    private Organization organization;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`user_id`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "`picture_path`", nullable = true, length = 2048)
    public String getPicturePath() {
        return this.picturePath;
    }

    public void setPicturePath(String picturePath) {
        this.picturePath = picturePath;
    }

    @Column(name = "`description`", nullable = true, length = 2048)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "`service_id`", nullable = true, scale = 0, precision = 10)
    public Integer getServiceId() {
        return this.serviceId;
    }

    public void setServiceId(Integer serviceId) {
        this.serviceId = serviceId;
    }

    @Column(name = "`status`", nullable = true, length = 50)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "`organization_id`", nullable = true, scale = 0, precision = 10)
    public Integer getOrganizationId() {
        return this.organizationId;
    }

    public void setOrganizationId(Integer organizationId) {
        this.organizationId = organizationId;
    }

    @Column(name = "`street`", nullable = true, length = 100)
    public String getStreet() {
        return this.street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    @Column(name = "`city`", nullable = true, length = 100)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "`district`", nullable = true, length = 100)
    public String getDistrict() {
        return this.district;
    }

    public void setDistrict(String district) {
        this.district = district;
    }

    @Column(name = "`state`", nullable = true, length = 100)
    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Column(name = "`country`", nullable = true, length = 100)
    public String getCountry() {
        return this.country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    @Column(name = "`pincode`", nullable = true, scale = 0, precision = 10)
    public Integer getPincode() {
        return this.pincode;
    }

    public void setPincode(Integer pincode) {
        this.pincode = pincode;
    }

    @Column(name = "`longitude`", nullable = true, scale = 9, precision = 22)
    public BigDecimal getLongitude() {
        return this.longitude;
    }

    public void setLongitude(BigDecimal longitude) {
        this.longitude = longitude;
    }

    @Column(name = "`latitude`", nullable = true, scale = 9, precision = 22)
    public BigDecimal getLatitude() {
        return this.latitude;
    }

    public void setLatitude(BigDecimal latitude) {
        this.latitude = latitude;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`user_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`complain_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        if(user != null) {
            this.userId = user.getId();
        }

        this.user = user;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`service_id`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`complain_ibfk_2`"))
    @Fetch(FetchMode.JOIN)
    public Service getService() {
        return this.service;
    }

    public void setService(Service service) {
        if(service != null) {
            this.serviceId = service.getId();
        }

        this.service = service;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`organization_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`complain_ibfk_3`"))
    @Fetch(FetchMode.JOIN)
    public Organization getOrganization() {
        return this.organization;
    }

    public void setOrganization(Organization organization) {
        if(organization != null) {
            this.organizationId = organization.getId();
        }

        this.organization = organization;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Complain)) return false;
        final Complain complain = (Complain) o;
        return Objects.equals(getId(), complain.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}